#!/bin/sh

### SETUP

# agfc information
NAME="agfc"
TAGLINE="AMD GPU Fan Controller"
VERSION="0.6.0"
AUTHOR_NAME="Patrick McNamara"
AUTHOR_EMAIL="hello@patrickmcnamara.xyz"

# AMDGPU files
FAN_MODE_FILE="/sys/class/drm/card0/device/hwmon/hwmon0/pwm1_enable"
FAN_SPEED_FILE="/sys/class/drm/card0/device/hwmon/hwmon0/pwm1"
GPU_TEMP_FILE="/sys/class/drm/card0/device/hwmon/hwmon0/temp1_input"

### FLAGS

help() {
    echo "NAME:"
    echo "    $NAME - $TAGLINE"
    echo
    echo "VERSION:"
    echo "    v$VERSION"
    echo
    echo "AUTHOR:"
    echo "    $AUTHOR_NAME <$AUTHOR_EMAIL>"
    echo
    echo "USAGE:"
    echo "    $NAME <SUBCOMMAND> [OPTION]"
    echo
    echo "FLAGS:"
    echo "    -h, --help       show help and exit"
    echo "    -v, --version    show version and exit"
    echo
    echo "SUBCOMMANDS:"
    echo "    status [value]   print the current status of $NAME and GPU, or just one item"
    echo "                     value can be version, running, mode, speed, temperature/temp"
    echo "    run              automatically update fan speed based on hardcoded curve, needs root"
    echo "    reset            reset to automatic control of the fan, needs root"
    echo
    echo "OTHER:"
    echo "    This command shouldn't be run directly for the moment. Please use the systemd service file provided instead."
}

version() {
    echo "$NAME v$VERSION"
}

### COMMANDS

status() {
    # Get string fan mode
    if [ "$CURR_FAN_MODE" -eq 0 ]; then
        CURR_FAN_MODE_STR="max"
    elif [ "$CURR_FAN_MODE" -eq 1 ]; then
        CURR_FAN_MODE_STR="manual"
    else
        CURR_FAN_MODE_STR="auto"
    fi

    # Get agfc running status
    if [ ! "$CURR_RUNNING_PID" = "$$" ]; then
        CURR_RUNNING_STATUS="yes"
    else
        CURR_RUNNING_STATUS="no"
    fi

    CURR_FAN_SPEED_STR=$(($CURR_FAN_SPEED * 100 / 255))
    CURR_GPU_TEMP_STR="$CURR_GPU_TEMPÂ°C"

    # Print status
    if [ -z "$1" ]; then
        printf "%-19s %s\n" "$NAME version:"   "$VERSION"
        printf "%-19s %s\n" "$NAME running:"   "$CURR_RUNNING_STATUS"
        printf "%-19s %s\n" "gpu fan mode:"    "$CURR_FAN_MODE_STR"
        printf "%-19s %s\n" "gpu fan speed:"   "$CURR_FAN_SPEED_STR"
        printf "%-19s %s\n" "gpu temperature:" "$CURR_GPU_TEMP_STR"
    elif [ "$1" = "version" ]; then
        echo "$VERSION"
    elif [ "$1" = "running" ]; then
        echo "$CURR_RUNNING_STATUS"
    elif [ "$1" = "mode" ]; then
        echo "$CURR_FAN_MODE_STR"
    elif [ "$1" = "speed" ]; then
        echo "$CURR_FAN_SPEED"
    elif [ "$1" = "temperature" ] || [ "$1" = "temp" ]; then
        echo "$CURR_GPU_TEMP"
    fi
}

run() {
    # Check if agfc is already running
    runAsRoot "run"

    # Check if running as root
    if [ ! "$(whoami)" = "root" ]; then
        error "run command must be run as root"
    fi

    while :; do
        # Set manual fan mode
        echo "1" > "$FAN_MODE_FILE"

        # Get the current GPU temperature
        CURR_GPU_TEMP=$(($(cat "$GPU_TEMP_FILE") / 1000))

        # Decide the right temperature
        if [ "$CURR_GPU_TEMP" -lt 40 ]; then
            NEW_FAN_SPEED=0
        elif [ "$CURR_GPU_TEMP" -lt 50 ]; then
            NEW_FAN_SPEED=64
        elif [ "$CURR_GPU_TEMP" -lt 60 ]; then
            NEW_FAN_SPEED=128
        elif [ "$CURR_GPU_TEMP" -lt 70 ]; then
            NEW_FAN_SPEED=160
        elif [ "$CURR_GPU_TEMP" -lt 80 ]; then
            NEW_FAN_SPEED=192
        else
            NEW_FAN_SPEED=255
        fi

        # Set the new fan speed
        echo "$NEW_FAN_SPEED" > "$FAN_SPEED_FILE"

        # Wait five seconds
        sleep 5
    done
}

reset() {
    # Check if running as root
    runAsRoot "reset"

    # Set fan mode to auto
    echo "2" > "$FAN_MODE_FILE"
}

### HELPERS

error() {
    echo "$NAME:" "$1" >&2
    exit 1
}

runAsRoot() {
    if [ ! "$(whoami)" = "root" ]; then
        error "$1 command must be run as root"
    fi
}

### MAIN

# Check if AMDGPU device is present
if [ ! -e "$FAN_MODE_FILE" ]; then
    error "could not find AMDGPU device"
fi

# agfc and AMGPU status information
CURR_FAN_MODE=$(cat "$FAN_MODE_FILE")
CURR_GPU_TEMP=$(($(cat "$GPU_TEMP_FILE") / 1000))
CURR_FAN_SPEED=$(cat "$FAN_SPEED_FILE")
CURR_RUNNING_PID=$(pgrep "$NAME" | head -n 1)

# Choose which command to run
if [ "$1" = "status" ]; then
    status $2
elif [ "$1" = "run" ]; then
    run
elif [ "$1" = "reset" ]; then
    reset
elif [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
    help
elif [ "$1" = "-v" ] || [ "$1" = "--version" ]; then
    version
else
    error "invalid command, please use -h or --help"
fi
